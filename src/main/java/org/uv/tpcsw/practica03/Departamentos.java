/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.uv.tpcsw.practica03;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author tony
 */
public class Departamentos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Departamentos
     */
    public Departamentos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        bttGuardar = new javax.swing.JButton();
        bttModificar = new javax.swing.JButton();
        bttEliminar = new javax.swing.JButton();
        bttBuscarID = new javax.swing.JButton();
        bttBuscarTodos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaa = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Inter", 3, 24)); // NOI18N
        jLabel1.setText("Departamentos");

        jLabel2.setText("Clave ");

        jLabel3.setText("Nombre");

        bttGuardar.setText("Guardar");
        bttGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttGuardarActionPerformed(evt);
            }
        });

        bttModificar.setText("Modificar");
        bttModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttModificarActionPerformed(evt);
            }
        });

        bttEliminar.setText("Eliminar");
        bttEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEliminarActionPerformed(evt);
            }
        });

        bttBuscarID.setText("Buscar_ID");
        bttBuscarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscarIDActionPerformed(evt);
            }
        });

        bttBuscarTodos.setText("Buscar Todos");
        bttBuscarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscarTodosActionPerformed(evt);
            }
        });

        txtAreaa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(txtAreaa);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtClave, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(49, 49, 49)))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bttGuardar)
                    .addComponent(bttModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bttEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(122, 122, 122))
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bttBuscarID, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttBuscarTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttGuardar))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttEliminar)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(bttBuscarID)
                        .addGap(50, 50, 50)
                        .addComponent(bttBuscarTodos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(347, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttModificarActionPerformed
        try {
            
            long clave = Long.parseLong(txtClave.getText());
            String nuevoNombre = txtNombre.getText();

            
            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();

            
            Departamento departamento = session.get(Departamento.class, clave);

            if (departamento != null) {
                
                departamento.setNombre(nuevoNombre);
                
                session.update(departamento);
           
                transaction.commit();
            
                JOptionPane.showMessageDialog(null, "Departamento modificado con éxito.");
            } else {
                
                JOptionPane.showMessageDialog(null, "No se encontró un departamento con esa clave.");
            }

            
            session.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido para la clave.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_bttModificarActionPerformed

    private void bttEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEliminarActionPerformed
        
         try {
            
            long clave = Long.parseLong(txtClave.getText());

            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();

            Departamento departamento = session.get(Departamento.class, clave);

            if (departamento != null) {
                session.delete(departamento);

                transaction.commit();

                JOptionPane.showMessageDialog(null, "Departamento eliminado con éxito.");
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró un departamento con esa clave.");
            }

            session.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido para la clave.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        
    }//GEN-LAST:event_bttEliminarActionPerformed

    private void bttGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttGuardarActionPerformed
        // TODO add your handling code here:
       try {
            
            long clave = Long.parseLong(txtClave.getText());
            String nombre = txtNombre.getText();

            
            Departamento departamento = new Departamento();
            departamento.setClave(clave);
            departamento.setNombre(nombre);

            
            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();
          
            session.save(departamento);
       
            transaction.commit();
           
            session.close();
          
            JOptionPane.showMessageDialog(null, "Departamento guardado con éxito.");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido para la clave.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        
    }//GEN-LAST:event_bttGuardarActionPerformed

    private void bttBuscarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscarIDActionPerformed
        
        try {
            // Obtener la clave del departamento a buscar
            long claveDepartamento = Long.parseLong(txtClave.getText()); // Asegúrate de que txtClave contenga un valor válido

            // Abrir sesión de Hibernate
            Session session = HibernateUtil.getSessionFactory().openSession();
            Departamento departamento = session.get(Departamento.class, claveDepartamento); // Buscar departamento por clave

            // Definir las columnas de la tabla
            String[] columnNames = {"Clave", "Nombre"};
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);

            if (departamento != null) {
                // Agregar los datos del departamento al modelo de la tabla
                Object[] rowData = {departamento.getClave(), departamento.getNombre()};
                model.addRow(rowData);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró un departamento con la clave proporcionada.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            // Asignar el modelo a la tabla
            txtAreaa.setModel(model);

            session.close(); // Cerrar la sesión
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La clave debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al buscar departamento: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bttBuscarIDActionPerformed

    private void bttBuscarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscarTodosActionPerformed

       try {
        // Abrir sesión de Hibernate
        Session session = HibernateUtil.getSessionFactory().openSession();
        List<Departamento> departamentos = session.createQuery("from Departamento", Departamento.class).list(); // Consultar todos los departamentos

        // Definir las columnas de la tabla
        String[] columnNames = {"Clave", "Nombre"};
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        // Agregar los datos de los departamentos al modelo de la tabla
        for (Departamento departamento : departamentos) {
            Object[] rowData = {departamento.getClave(), departamento.getNombre()};
            model.addRow(rowData);
        }

        // Asignar el modelo a la tabla
        txtAreaa.setModel(model);

        session.close(); // Cerrar la sesión
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al obtener los departamentos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_bttBuscarTodosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttBuscarID;
    private javax.swing.JButton bttBuscarTodos;
    private javax.swing.JButton bttEliminar;
    private javax.swing.JButton bttGuardar;
    private javax.swing.JButton bttModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable txtAreaa;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
