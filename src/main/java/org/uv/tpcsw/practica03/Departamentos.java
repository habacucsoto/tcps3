/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.uv.tpcsw.practica03;

import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author tony
 */
public class Departamentos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Departamentos
     */
    public Departamentos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        bttGuardar = new javax.swing.JButton();
        bttModificar = new javax.swing.JButton();
        bttEliminar = new javax.swing.JButton();
        bttBuscarID = new javax.swing.JButton();
        bttBuscarTodos = new javax.swing.JButton();
        txtBuscarId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();

        jLabel1.setFont(new java.awt.Font("Inter", 3, 24)); // NOI18N
        jLabel1.setText("Departamentos");

        jLabel2.setText("Clave ");

        jLabel3.setText("Nombre");

        bttGuardar.setText("Guardar");
        bttGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttGuardarActionPerformed(evt);
            }
        });

        bttModificar.setText("Modificar");
        bttModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttModificarActionPerformed(evt);
            }
        });

        bttEliminar.setText("Eliminar");
        bttEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEliminarActionPerformed(evt);
            }
        });

        bttBuscarID.setText("Buscar_ID");
        bttBuscarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscarIDActionPerformed(evt);
            }
        });

        bttBuscarTodos.setText("Buscar Todos");
        bttBuscarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscarTodosActionPerformed(evt);
            }
        });

        txtBuscarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarIdActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        textArea.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                textAreaAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtClave, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(49, 49, 49)))
                        .addGap(79, 79, 79))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(bttBuscarID, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscarId, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bttGuardar)
                    .addComponent(bttModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bttEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(122, 122, 122))
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(bttBuscarTodos)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bttGuardar))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bttModificar))
                        .addGap(28, 28, 28)
                        .addComponent(bttEliminar)
                        .addGap(121, 121, 121)
                        .addComponent(bttBuscarTodos)
                        .addContainerGap(116, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bttBuscarID)
                            .addComponent(txtBuscarId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttModificarActionPerformed
        try {
            
            long clave = Long.parseLong(txtClave.getText());
            String nuevoNombre = txtNombre.getText();

            
            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();

            
            Departamento departamento = session.get(Departamento.class, clave);

            if (departamento != null) {
                
                departamento.setNombre(nuevoNombre);

                
                session.update(departamento);

                
                transaction.commit();

                
                JOptionPane.showMessageDialog(null, "Departamento modificado con éxito.");
            } else {
                
                JOptionPane.showMessageDialog(null, "No se encontró un departamento con esa clave.");
            }

            
            session.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido para la clave.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_bttModificarActionPerformed

    private void bttEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEliminarActionPerformed
        
         try {
            
            long clave = Long.parseLong(txtClave.getText());

            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();

            Departamento departamento = session.get(Departamento.class, clave);

            if (departamento != null) {
                session.delete(departamento);

                transaction.commit();

                JOptionPane.showMessageDialog(null, "Departamento eliminado con éxito.");
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró un departamento con esa clave.");
            }

            session.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido para la clave.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        
    }//GEN-LAST:event_bttEliminarActionPerformed

    private void txtBuscarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarIdActionPerformed

    private void bttGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttGuardarActionPerformed
        // TODO add your handling code here:
       try {
            
            long clave = Long.parseLong(txtClave.getText());
            String nombre = txtNombre.getText();

            
            Departamento departamento = new Departamento();
            departamento.setClave(clave);
            departamento.setNombre(nombre);

            
            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();

            
            session.save(departamento);

            
            transaction.commit();

           
            session.close();

            
            JOptionPane.showMessageDialog(null, "Departamento guardado con éxito.");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido para la clave.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        
    }//GEN-LAST:event_bttGuardarActionPerformed

    private void bttBuscarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscarIDActionPerformed
        
        try {
            long clave = Long.parseLong(txtClave.getText());

            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();

            Departamento departamento = session.get(Departamento.class, clave);

            if (departamento != null) {
                StringBuilder info = new StringBuilder();
                info.append("Clave: ").append(departamento.getClave()).append("\n");
                info.append("Nombre: ").append(departamento.getNombre()).append("\n");

                if (departamento.getEmpleados() != null && !departamento.getEmpleados().isEmpty()) {
                    info.append("Empleados:\n");
                    for (Empleado emp : departamento.getEmpleados()) {
                        info.append(" - Nombre: ").append(emp.getNombre()).append("\n");
                    }
                } else {
                    info.append("No hay empleados asociados.");
                }

                textArea.setText(info.toString());
            } else {
                textArea.setText("No se encontró un departamento con esa clave.");
            }

            transaction.commit();
            session.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido para la clave.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_bttBuscarIDActionPerformed

    private void textAreaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_textAreaAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_textAreaAncestorAdded

    private void bttBuscarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscarTodosActionPerformed

       
        try {
            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction transaction = session.beginTransaction();

            List<Departamento> departamentos = session.createQuery("from Departamento", Departamento.class).list();

            StringBuilder info = new StringBuilder();

            if (departamentos != null && !departamentos.isEmpty()) {
                for (Departamento depto : departamentos) {
                    info.append("Clave: ").append(depto.getClave()).append("\n");
                    info.append("Nombre: ").append(depto.getNombre()).append("\n");

                    if (depto.getEmpleados() != null && !depto.getEmpleados().isEmpty()) {
                        info.append("Empleados:\n");
                        for (Empleado emp : depto.getEmpleados()) {
                            info.append(" - Nombre: ").append(emp.getNombre()).append("\n");
                        }
                    } else {
                        info.append("No hay empleados asociados.\n");
                    }

                    info.append("------------------------\n"); 
                }

                textArea.setText(info.toString());
            } else {
                textArea.setText("No hay departamentos registrados.");
            }

            transaction.commit();
            session.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_bttBuscarTodosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttBuscarID;
    private javax.swing.JButton bttBuscarTodos;
    private javax.swing.JButton bttEliminar;
    private javax.swing.JButton bttGuardar;
    private javax.swing.JButton bttModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField txtBuscarId;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
